name: Linux build

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: 
          - 'ubuntu-latest'
          - 'macos-latest'
          - 'windows-latest'
        release:
          - latest
          - '2020.05.1.01'
                
    steps:
         
    - uses: actions/checkout@v2
      
    - name: Set Windows Path
      run: |
        xx=$( perl <<EOM 
          print "hello world ${{ matrix.release }}\n";
        EOM
        )
        echo MATCH $xx
      shell: bash

    - name: Check Raku version
      run: |
        xx=$( perl - ${{ matrix.os }} ${{ matrix.release }} <<'EOM'

            use strict;
            use warnings;

            my %mapping = ( macos   => 'macos',
                            ubuntu  => 'linux',
                            windows => 'win') ;

            my $os = shift ;
            my $version = shift ;

            $os =~ s/-.+$//;

            die "Unknown os $os\n"
                if ! $mapping{$os} ;


            my $url = 'https://rakudo.org/downloads/rakudo' ;

            my %versions;

            my @data = `curl -q $url 2>/dev/null` ;

            for my $line (@data)
            {
                next
                    unless $line =~ m#<a href=./dl/rakudo/rakudo-moar-([\d\.-]+?)-$mapping{$os}-x86_64#;

                my $keep = $1;
                my $sortable = $1;

                $sortable =~ s/\.-//g;

                $versions{$sortable} = $keep;
            }

            if (lc $version ne 'latest')
            {
                die "Cannot find version $version\n"
                    if ! $versions{lc $version};

                print "$version\n" ;
            }
            else
            {
                print $versions{ (sort keys %versions)[-1] } . "\n";
            }


                      
        EOM
        )
        echo MATCH $xx
      shell: bash
        
     
