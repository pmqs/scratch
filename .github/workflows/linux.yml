name: Linux build

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: 
          - 'ubuntu-latest'
          - 'macos-latest'
          - 'windows-latest'
        release:
          - 'alpha-01'
          - 'beta-01'
                
    steps:
         
    - uses: actions/checkout@v2
      
    - name: Set Windows Path
      if: startsWith(matrix.os, 'windows')
      run: |
        echo "::set-env name=INSTALL_PATH::$HOME\${{ matrix.os }}.${{ matrix.release }}"
        BASEV=`echo ${{ matrix.release }} | sed -e 's/-.*$//' `        
        echo BASEV is $BASEV
        echo "::set-env name=INSTALL_PATH_BASE::$BASEV"            
        
    - name: Set Linux/MacOS Path
      if: ${{ ! startsWith(matrix.os, 'windows') }}
      run: |
        echo "::set-env name=INSTALL_PATH::$HOME/${{ matrix.os }}.${{ matrix.release }}"     
        $BASEV = ${{ matrix.release }} -replace "-.*$", ""
        echo BASEV is $BASEV
        echo "::set-env name=INSTALL_PATH_BASE::$BASEV"               
        
    - name: Show
      run: |
        echo INSTALL_PATH $INSTALL_PATH
        echo RELEASE ${{ matrix.release }}
        echo INSTALL_PATH ${{ env.INSTALL_PATH }}
    
        
        
    - name: env
      run: |
        env | grep INSTALL_PATH
        env | grep INSTALL_PATH_BASE
      
    - name: Check Cache
      id: my-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.INSTALL_PATH }}
        key: ${{ matrix.release }}x
     
#     - name: Install 
#       if: ${{ ! startsWith(matrix.os, 'windows') && steps.my-cache.outputs.cache-hit != 'true' }}
#       run: |
#         mkdir $INSTALL_PATH
#         echo abc >$INSTALL_PATH/token

    - name: Install 
      if:  steps.my-cache.outputs.cache-hit != 'true' 
      run: |
        mkdir ${{ env.INSTALL_PATH }}
        cd ${{ env.INSTALL_PATH }}
        echo INSTALL_PATH_BASE is ${{ env.INSTALL_PATH_BASE }} >token
        
    - name: Work
      run: |
        cd ${{ env.INSTALL_PATH }}
        echo token contains:
        cat token
        echo this is ${{ matrix.os }} ${{ matrix.release }}

    
